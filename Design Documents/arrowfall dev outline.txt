to-do:

controls:
bow + mouse tracking - DONE
camera follow
controller support - DONE
menu for switching controls
	eventually for each player
support for multiple players (max 4 players) - DONE
	unique controls for each player - DONE
	only one keyboard available - DONE?
jump forgiveness - DONE
coyote time - DONE


systems:
walking - DONE
jump/double jump - DONE
shoot arrow - DONE
arrow physics - DONE
	fix arrow stuck in place bug - DONE
	fix arrow jitter on spawn bug - DONE
proper fsm + move all movement code to seperate methods - DONE
	idle - DONE
	walking - DONE
	jumping - DONE
	falling - DONE 
	wall slide - DONE
	stasis, player is invincible and movement code does not apply until a button is pressed - DONE
	restrict certain actions during certain states
	move wallsidecdtimer to state transitions - DONE
wall jump - DONE
variable jump heights
	jump higher the longer button is held
	short button press results in min height short hop
knockback on hit
	knockback/damage scales with arrow velocity 
	scale variable 0-1 that controls how much influence the player's inputs have
		set scale to 0 after being hit and slowly ramp it back up based on knockback amount
arrow recoil
	recoil scales with shootPower - DONE, but might remove if annoying
stock system + proper respawns - kinda done? will need to implement properly later
directional shield
	decrease radius while held out - DONE
	regenerate over time - DONE
	proper collision detection - DONE
	deflect arrows in direction user is looking - DONE
		arrow retains speed scaling with time shield held out - DONE	
		NOTE: how to balance arrow deflection with shield size? perfect deflection is way too easy rn
			slightly randomize deflection offset angle scaling with time shield held out?
	slow horizontal movespeed while shield is held out
	eventually change arrow/shield detection to work off of layers/groups instead of names
	stop player from shooting while shield is held out?
		just set shootpower to 0 while shield is held or something
items
	inventory system
		one offensive + defensive?
		context-sensitive item button
			switch between normal arrows and special arrows if available
			item dropping/switching when standing over another item while one is already held
				alternatively, item dropping only when holding down direction + item button
move global variables to a singleton class
	tile size - doesn't work for some reason idk
	arrow types - DONE
	items
offscreen icon
	portrait of player pointing in their direction while offscreen
map generation:
procedural level generation
	platform types
	platform spawning
	

sprites/animation:
tilesetting
	parallax
animations
	player - DONE
	bow - DONE


graphics:
figure out proper resolution/sprite scale - DONE
	will probably want to decrease sprite scales to allow for more tiles on the screen at once


sound
	sfx
	music


multiplayer:
pre-game player selection menu
	smash/rivals of aether-like "training stage" before loading into the game
		can serve as a tutorial room
local multiplayer
online multiplayer?


list of Z-layers:
-20: background_day1
-19: background_day2
-18: background_day3
-3: BackgroundTileMap
-2: ForegroundTileMap
-2: DropThroughTileMap
-1: arrows
 0: PhysicalTileMap
 0: Bow
 1: Player
100: Shield


bugs that need fixing:
arrow/player hitboxes - DONE
	arrows currently stop too quickly when hitting players, causing them to float on the edge of the hitbox instead of penetrating more deeply
recoil is applied weirdly depending on current velocity
	recoil in the opposite direction of movement is basically nullified
	recoil in the same direction of movement seems amplified
seems to be some memory leaks judging by the console print upon exiting the game


for polish:
update variable names
	add typing markers to inputs
	put underscores in front of variables so warnings stop pestering us
particle effects when an arrow collides with terrain
arrow "flight trails"
when two arrows collide mid-flight, the faster one should break through the slow one
	the "broken" arrow simply splits into two pieces and falls down through terrain

